<?php

/**
 * @file
 * OAuth2.0 Consumer Support install and uninstall code.
 */

/**
 * Implements hook_install().
 */
function oauth2_consumer_install() {
}

/**
 * Implements hook_uninstall().
 */
function oauth2_consumer_uninstall() {
}

/**
 * Implements hook_schema().
 */
function oauth2_consumer_schema() {
  $schema = array();

  $schema['oauth2_consumers']  = array(
    'description' => 'Stores information about OAuth2.0 consumers.',
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for a node.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The current {node_revisions}.vid version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'services_uri' => array(
        'description' => 'The remote server\'s HTTP endpoint capable of Drupal Service 3.x services. Absolute path or path relative to base URI.',
        'type' => 'text',
      ),
      'expires_in' => array(
        'description' => 'How long will OAuth2.0 cache query result within local cache. With a long cache lifetime can greatly reduce the loading of remote OAuth2.0 authorization server; by the way with a short cache lifetime can ensure the synchronize of access_token. To disable cache functionality, simply set this as 0.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'A serialized array of name value pairs that are related to the consumer username and password.',
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
    ),
  );

  return $schema;
}